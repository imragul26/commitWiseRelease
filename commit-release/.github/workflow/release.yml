name: 📦 Create Draft Release (Manual)
 
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 1.2.3)'
        required: true
        type: string
 
jobs:
  update_release_draft:
    name: 🛠 Run Release Drafter
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📝 Generate release notes with commits
        id: generate-notes
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get the latest release to find what's new
            let sinceTag = '1.0.0'; // fallback
            try {
              const { data: latestRelease } = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              sinceTag = latestRelease.tag_name;
            } catch (error) {
              console.log('No previous release found, using fallback');
            }
            
            // Get all merged PRs since last release
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              sort: 'updated',
              direction: 'desc',
              per_page: 20
            });
            
            let releaseNotes = "## What's Changed\n\n";
            
            for (const pr of pulls) {
              if (pr.merged_at) {
                // Get commits for this PR
                const { data: commits } = await github.rest.pulls.listCommits({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number
                });
                
                // Add PR title
                releaseNotes += `* **${pr.title}** by @${pr.user.login} in #${pr.number}\n`;
                
                // Add commit messages
                if (commits.length > 0) {
                  releaseNotes += "  \n";
                  commits.forEach(commit => {
                    releaseNotes += `  • ${commit.commit.message.split('\n')[0]}\n`;
                  });
                  releaseNotes += "  \n";
                }
              }
            }
            
            // Add full changelog link
            releaseNotes += `\n**Full Changelog**: https://github.com/${context.repo.owner}/${context.repo.repo}/compare/${sinceTag}...${github.event.inputs.version}\n`;
            
            core.setOutput('release-notes', releaseNotes);
            console.log('Generated release notes:', releaseNotes);
            
      - name: 🚀 Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          body: ${{ steps.generate-notes.outputs.release-notes }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
